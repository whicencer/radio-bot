const { Scenes } = require('telegraf');
const { INFORMATION_SCENE } = require('../constants/scenes');
const { getLanguage } = require('../utils/getLanguage');

const information = new Scenes.BaseScene(INFORMATION_SCENE);

information.enter(ctx => {
	const navigationMsg = `<b>${getLanguage(ctx.session.lang, "–û–±—â–∏–µ –∫–Ω–æ–ø–∫–∏")}:</b>
	<code>
	${getLanguage(ctx.session.lang, "üë§ –ü—Ä–æ—Ñ–∏–ª—å ‚Äî –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å")}
	${getLanguage(ctx.session.lang, "üìñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")}
	${getLanguage(ctx.session.lang, "üì° –¢—Ä–∞–Ω—Å–ª–∏—Ä–æ–≤–∞—Ç—å - –ú–µ–Ω—é —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–π")}
	</code>
	
	<b>${getLanguage(ctx.session.lang, "–ú–µ–Ω—é —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–π")}:</b>
	<code>
	${getLanguage(ctx.session.lang, "üí¨ –ö–∞–Ω–∞–ª—ã - –í–∞—à–∏ –∫–∞–Ω–∞–ª—ã")}
	${getLanguage(ctx.session.lang, "üìÄ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ - –û–±—â–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞")}
	</code>`;
	
	ctx.reply(navigationMsg, {
		reply_markup: {
			inline_keyboard: [
				[{ text: getLanguage(ctx.session.lang, "–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"), url: 'https://t.me/nastyaa_manag' }],
				[{ text: getLanguage(ctx.session.lang, "–¢–∞—Ä–∏—Ñ—ã –∏ —Ü–µ–Ω—ã"), callback_data: 'price_list' }],
			]
		},
		parse_mode: 'HTML'
	});
});

information.action('price_list', ctx => {
	const firstTariff = `1. Basic: $10/${getLanguage(ctx.session.lang, "–º–µ—Å")}\n${getLanguage(ctx.session.lang, "–¢–æ–ª—å–∫–æ —Ä–∞–¥–∏–æ. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤ 1 –∫–∞–Ω–∞–ª–µ")}\n\n`;
	const secondTariff = `2. Advanced: $40/${getLanguage(ctx.session.lang, "–º–µ—Å")}\n${getLanguage(ctx.session.lang, "–¢–∞—Ä–∏—Ñ Basic + Youtube. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤ 2-—Ö –∫–∞–Ω–∞–ª–∞—Ö")}\n\n`;
	const thirdTariff = `3. Premium: $70/${getLanguage(ctx.session.lang, "–º–µ—Å")}\n${getLanguage(ctx.session.lang, "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤ 4-—Ö –∫–∞–Ω–∞–ª–∞—Ö")}\n`;
	const msg = firstTariff+secondTariff+thirdTariff;

	ctx.reply(msg, {
		parse_mode: 'HTML'
	});
});

module.exports = { information };